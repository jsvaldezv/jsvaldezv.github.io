export const projects = [
    // Plugins
    {
        slug: "sweetpoint",
        main_title: "SweetPoint",
        category: "Audio Plug-in",
        short_description: "Smart Stereo Field Optimizer",
        large_description:
            "SweetPoint is an innovative audio plugin designed to smartly optimize your stereo field with transparent mid-side processing. Featuring a unique, in-house-developed smart assistant, SweetPoint provides expert guidance to help you achieve your ideal stereo image effortlessly.",
        external_link: "https://earcandytech.com/sweetpoint",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewSweetpoint.png",
        yt_link:
            "https://www.youtube.com/embed/8JyBXTnEblc?si=Dt496cZ-f84R882P",
        path: "/software/audio-plugin/sweetpoint",
        github: "none",
        padding: true,
    },
    {
        slug: "twizzlay",
        main_title: "Twizzlay",
        category: "Audio Plug-in",
        short_description: "Ping Pong Delay",
        large_description:
            "Twizzlay takes ping-pong delay to the next level. Beyond adding spatial depth and movement, it spices up your sound with exclusive Flavor tuning and streamlines your workflow with Routing. Elevate your sound effortlessly with Twizzlay!",
        external_link: "https://earcandytech.com/twizzlay",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewTwizzlay.png",
        yt_link:
            "https://www.youtube.com/embed/mubVXQsj4Zc?si=i77ZdB84VvA6c3JX",
        path: "/software/audio-plugin/twizzlay",
        github: "none",
        padding: true,
    },
    {
        slug: "gummy-groove",
        main_title: "Gummy Groove",
        category: "Audio Plug-in",
        short_description: "Chorus with Exclusive Flavor",
        large_description:
            "Gummy Groove is your ultimate Chorus plugin, designed to enrich your vocals, add depth to instruments and enhance the stereo image of your mix, it boosts your audio with exclusive Flavor tuning and simplifies your creative process with Routing. Gummy Groove is the go-to solution for creating captivating sonic environments.",
        external_link: "https://www.earcandytech.com/gummygroove",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewGummy.png",
        yt_link:
            "https://www.youtube.com/embed/YumHLUfj2Hg?si=GAWYKD7ChXulv7N5",
        path: "/software/audio-plugin/gummy-groove",
        github: "none",
        padding: true,
    },
    {
        slug: "phonograin",
        main_title: "Phonograin",
        category: "Audio Plug-in",
        short_description: "Granular Multi FX Audio Plug-in",
        large_description:
            "The phonograin granular module focuses on granular synthesis and offers five exclusive Ear Candy Technologies features for modifying grain processing, as well as four parameters for customizing your playback.",
        external_link: "https://earcandytech.com/phonograin",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewPhono.png",
        yt_link:
            "https://www.youtube.com/embed/V8IZB2xz8MA?si=ezoNY268sMlp6VWt",
        path: "/software/audio-plugin/phonograin",
        github: "none",
        padding: true,
    },
    {
        slug: "shape",
        main_title: "Shape",
        category: "Audio Plug-in",
        short_description: "Spectral Harmoniser Auditory Perceptual Enhancer",
        large_description:
            "Our Audio plugin is used by Grammy Award winners, SHAPE offers a unique take on EQ, focusing on psychoacoustics and equal loudness curves. This powerful, user-friendly plugin enables you to fine-tune the perceived loudness and frequency balance of any sound in a way that is natural, ear-friendly, and inspiring.",
        external_link: "https://www.oikla.com/",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewShape.png",
        yt_link:
            "https://www.youtube.com/embed/PLVGIz-hD2Q?si=sp8_yCK6lJ4MMkQF",
        path: "/software/audio-plugin/shape",
        github: "none",
        padding: true,
    },
    {
        slug: "tlaloc",
        main_title: "Tlaloc",
        category: "Audio Plug-in",
        short_description: "Granular sampler with 5 algorithms",
        large_description:
            "This is a granular sampler instrument built with multiple advanced features for creative sound design. It includes five different granular algorithms, pitch shifting, time stretching, polyphonic voices, and a recording feature for capturing custom samples. The instrument also offers a wide range of controls such as panning, bend knob, output gain, ADSR envelope, and built-in effects including reverb, chorus, high-pass filter, and low-pass filter. A preset system is integrated to save and recall user settings. This project is ideal for exploring experimental sampling and real-time audio processing.",
        external_link: "#",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewTlaloc.png",
        yt_link: "",
        path: "/software/audio-plugin/tlaloc",
        github: "none",
        padding: true,
    },
    {
        slug: "esmeralda",
        main_title: "Esmeralda",
        category: "Audio Plug-in",
        short_description: "Binaural Convolution Reverb",
        large_description:
            "A classic reverb that allows you to choose between 4 possible spaces to position your sound and give it a characterization that you can customize, choosing between 4 different materials.",
        external_link: "https://earcandytech.com/esmeralda",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewEsme.png",
        yt_link:
            "https://www.youtube.com/embed/MN3noZKR1EU?si=UOmn_hTbfkFi64ls",
        path: "/software/audio-plugin/esmeralda",
        github: "none",
        padding: true,
    },
    {
        slug: "ruby",
        main_title: "Ruby",
        category: "Audio Plug-in",
        short_description: "Sequenced Delay with Pitch Shifting",
        large_description:
            "With Ruby's delay you will have the freedom to modify the time as you want, however you can also sync it to the BPM of your session for greater precision. The sequencer allows you to have control over 16 repetitions of the delay with the possibility of modifying by semitones.",
        external_link: "https://earcandytech.com/ruby",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewRuby.png",
        yt_link:
            "https://www.youtube.com/embed/fb-FRn_lWYk?si=LNFRQVP6UcVa-pMJ",
        path: "/software/audio-plugin/ruby",
        github: "none",
        padding: true,
    },
    {
        slug: "zafiro",
        main_title: "Zafiro",
        category: "Audio Plug-in",
        short_description: "Distortion with LFO modulation",
        large_description:
            "It has an LFO that allows you to oscillate between 0 and 10 hz. We offer the classic square, sawtooth, triangle and sinusoidal waveforms. We also incorporate 2 original waveforms that allow you to explore even more and develop your ideas.",
        external_link: "https://earcandytech.com/zafiro",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewZafiro.png",
        yt_link:
            "https://www.youtube.com/embed/gJiG2rmHdjE?si=PBXBcjlqdj68TKyz",
        path: "/software/audio-plugin/zafiro",
        github: "none",
        padding: true,
    },
    {
        slug: "spatializer",
        main_title: "Spatializer",
        category: "Audio Plug-in",
        short_description: "Move audio through 2,4 and 8 speakers",
        large_description:
            "The equation obtained from the analysis of the sine and cosine functions was developed to be applied for the configuration of 4 channels / horns, there are 2 sliders that modify the values of X and Y depending on where you want to position the sound. These values alter the result of the following 4 equations for each speaker.",
        external_link: "",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewSpatial.png",
        yt_link: "",
        path: "/software/audio-plugin/spatializer",
        github: "none",
        padding: true,
    },
    {
        slug: "funny-distortion",
        main_title: "Funny Distortion",
        category: "Audio Plug-in",
        short_description: "Funny Distortion",
        large_description:
            "Distortion audio plug-in developed in C++ using the JUCE framework. It features three distinct types of distortion, along with adjustable parameters for Drive, Range, Blend, and Volume. Designed for creative sound shaping, the plug-in allows users to explore a wide range of saturation tones â€” from subtle warmth to aggressive clipping.",
        external_link: "",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewFunnyDistor.png",
        yt_link: "",
        path: "/software/audio-plugin/funny-distortion",
        github: "none",
        padding: true,
    },
    {
        slug: "banana-split",
        main_title: "Banana Split",
        category: "Audio Plug-in",
        short_description: "FM synthesizer with built-in effects",
        large_description:
            "The synthesizer is an FM-based virtual instrument with one oscillator with selectable waveforms, gain control for the oscillator ADSR envelope and built-in audio effects: Reverb, Delay, Chorus, Distortion",
        external_link: "https://github.com/jsvaldezv/banana-split/releases",
        tech_used: ["/logos/JUCE.png", "/logos/cpp.png"],
        main_image: "/plugins/viewBanana.png",
        yt_link: "",
        path: "/software/audio-plugin/banana-split",
        github: "https://github.com/jsvaldezv/banana-split",
        padding: true,
    },
    // C++
    {
        slug: "tetris",
        main_title: "Tetris Clone",
        category: "C++",
        short_description: "Recreation of tetris game",
        large_description:
            "This project is a custom implementation of the iconic Tetris puzzle game, developed in C++ with raylib for graphics and input handling. The project uses CMake for an organized and portable build system.",
        external_link: "https://github.com/jsvaldezv/tetris",
        tech_used: ["/logos/cpp.png"],
        main_image: "/cpp/tetris.png",
        yt_link: "",
        path: "/software/cpp/tetris",
        github: "https://github.com/jsvaldezv/tetris",
        padding: true,
    },
    {
        slug: "pong-game",
        main_title: "Pong Game",
        category: "C++",
        short_description: "Pong Game Clone",
        large_description:
            "This is a minimalist yet fully functional clone of the classic Pong game, developed in C++ using raylib for graphics and real-time input. The build system is handled with CMake, making it easy to compile and run across different platforms.",
        external_link: "https://github.com/jsvaldezv/pong-game",
        tech_used: ["/logos/cpp.png"],
        main_image: "/cpp/pong.png",
        yt_link: "",
        path: "/software/cpp/pong-game",
        github: "https://github.com/jsvaldezv/pong-game",
        padding: true,
    },
    {
        slug: "space-invaders",
        main_title: "Space Invaders Clone",
        category: "C++",
        short_description: "Space Invaders Clone",
        large_description:
            "This project is a modern take on the classic Space Invaders arcade game, built from scratch in C++ using the raylib graphics library. The build process is managed with CMake, ensuring portability and ease of compilation across platforms.",
        external_link: "https://github.com/jsvaldezv/space-invaders",
        tech_used: ["/logos/cpp.png"],
        main_image: "/cpp/space-invaders.png",
        yt_link: "",
        path: "/software/cpp/space-invaders",
        github: "https://github.com/jsvaldezv/space-invaders",
        padding: true,
    },
    // Web development
    {
        slug: "ect-web",
        main_title: "Ear Candy Technologies Website",
        category: "Web Development",
        short_description: "Ear Candy Technologies Website",
        large_description: "Current Company Website",
        external_link: "https://earcandytech.com/",
        tech_used: ["/logos/js.png", "/logos/react.png", "/logos/firebase.png"],
        main_image: "/webdev/viewECT.png",
        yt_link: "",
        path: "/software/web-dev/ect-web",
        github: "none",
        padding: true,
    },
    {
        slug: "drum-machine",
        main_title: "Real-Time Drum Machine",
        category: "Web Development",
        short_description: "Real-Time Drum Machine",
        large_description:
            "This is a real-time, browser-based drum machine built entirely with vanilla JavaScriptâ€”no frameworks, no libraries. It features a responsive interface where you can trigger and customize rhythmic patterns directly from your browser.",
        external_link: "https://jsvaldezv.github.io/drum-machine/",
        tech_used: ["/logos/js.png"],
        main_image: "/webdev/viewDrum.png",
        yt_link: "",
        path: "/software/web-dev/drum-machine",
        github: "https://github.com/jsvaldezv/drum-machine",
        padding: true,
    },
    {
        slug: "visuals-p5",
        main_title: "p5 Visual Explorations",
        category: "Web Development",
        short_description: "Collection of generative sketches built with p5.js",
        large_description:
            "Collection of generative visuals developed with p5.js, designed to run directly in the browser. Each sketch explores form, motion, and interaction through codeâ€”ranging from organic simulations to abstract compositions.",
        external_link: "https://jsvaldezv.github.io/p5-visual-explorations/",
        tech_used: ["/logos/js.png", "/logos/p5.png"],
        main_image: "/webdev/viewVisualsP5.png",
        yt_link: "",
        path: "/software/web-dev/visuals-p5",
        github: "https://github.com/jsvaldezv/p5-visual-explorations",
        padding: true,
    },
    {
        slug: "liminal-spaces",
        main_title: "Liminal Spaces",
        category: "Web Development",
        short_description: "Virtual space inspired by La llorona",
        large_description:
            "Liminal spaces are transitory environmentsâ€”empty hallways, deserted waiting rooms, surreal architectureâ€”that evoke feelings of isolation, nostalgia, and unease.",
        external_link: "https://jsvaldezv.github.io/liminal-spaces/",
        tech_used: ["/logos/js.png", "/logos/three.png"],
        main_image: "/webdev/viewLiminal.png",
        yt_link: "",
        path: "/software/web-dev/liminal-spaces",
        github: "https://github.com/jsvaldezv/liminal-spaces",
        padding: true,
    },
    {
        slug: "synth-kids",
        main_title: "Synth Kids",
        category: "Web Development",
        short_description: "Web-based synthesizer built with vanilla JS",
        large_description:
            "KidSynth is a simple and interactive synthesizer designed to help children learn basic music theory while having fun experimenting with sound. It was built using HTML, CSS, and JavaScript, leveraging the Web Audio API to generate and manipulate sound in real time.",
        external_link: "https://jsvaldezv.github.io/synth-kids/",
        tech_used: ["/logos/js.png"],
        main_image: "/webdev/viewSynthKids.png",
        yt_link: "",
        path: "/software/web-dev/synth-kids",
        github: "https://github.com/jsvaldezv/synth-kids",
        padding: true,
    },
    {
        slug: "audio-plugins-store",
        main_title: "Audio Plug-ins Store",
        category: "Web Development",
        short_description: "Virtual Audio Plugin Store",
        large_description:
            "Web application developed with React JS and Firebase, designed to simulate a virtual store for audio plug-ins. The goal is to provide an intuitive and engaging platform where music producers can explore and purchase virtual plug-ins easily.",
        external_link: "https://github.com/jsvaldezv/audio-plugins-store",
        tech_used: ["/logos/js.png", "/logos/react.png"],
        main_image: "/webdev/viewPluginsStore.png",
        yt_link: "",
        path: "/software/web-dev/audio-plugins-store",
        github: "https://github.com/jsvaldezv/audio-plugins-store",
        padding: true,
    },
    {
        slug: "matrix-clock",
        main_title: "Matrix Clock",
        category: "Web Development",
        short_description: "Digital and analog clock with matrix style",
        large_description:
            "Digital and analog clock built with vanilla JavaScript, HTML, and CSS, featuring a sleek Matrix-inspired design. The clock allows you to switch between digital and analog modes and customize the display color for a personalized look.",
        external_link: "https://jsvaldezv.github.io/matrix-clock/",
        tech_used: ["/logos/js.png"],
        main_image: "/webdev/viewMatrix.png",
        yt_link: "",
        path: "/software/web-dev/matrix-clock",
        github: "https://github.com/jsvaldezv/matrix-clock",
        padding: true,
    },
    // Machine learning
    {
        slug: "instruments-classifier",
        main_title: "Instruments Classifier",
        category: "Python and ML",
        short_description: "Instrument Classifier",
        large_description:
            "Instrument classifier developed in Python using Scikit-learn and PyQt5. The model is capable of identifying various musical instruments from audio samples based on extracted audio descriptors.",
        external_link: "https://github.com/jsvaldezv/instruments-classifier",
        tech_used: ["/logos/python.png", "/logos/scikit-learn.png"],
        main_image: "/py-ml/viewClass.png",
        yt_link: "",
        path: "/software/web-dev/instruments-classifier",
        github: "https://github.com/jsvaldezv/instruments-classifier",
        padding: true,
    },
    {
        slug: "midi-arpeggiator",
        main_title: "MIDI Arpeggiator",
        category: "Python and ML",
        short_description: "Arpeggiator based on Ableton's Live",
        large_description:
            "MIDI arpeggiator built with Python, inspired by the functionality of Ableton Live's arpeggiator. It allows users to input MIDI notes and automatically generates arpeggiated patterns.",
        external_link: "https://github.com/jsvaldezv/midi-arpeggiator",
        tech_used: ["/logos/python.png"],
        main_image: "/py-ml/viewArp.png",
        yt_link: "",
        path: "/software/web-dev/midi-arpeggiator",
        github: "https://github.com/jsvaldezv/midi-arpeggiator",
        padding: true,
    },
    {
        slug: "random-melody",
        main_title: "Random Melody",
        category: "Python and ML",
        short_description: "Quantum Aleatoric Composer",
        large_description:
            "Tool for aleatory (random) music composition that generates melodies based on a chosen musical scale. It was built with Python and includes an experimental implementation using a quantum computer (IonQ) via Amazon Braket, enabling the generation of true randomness for musical creativity.",
        external_link: "https://github.com/jsvaldezv/quantum-random-composer",
        tech_used: ["/logos/python.png"],
        main_image: "",
        yt_link: "",
        path: "/software/web-dev/random-melody",
        github: "https://github.com/jsvaldezv/quantum-random-composer",
        padding: true,
    },
    {
        slug: "clingo-drum-machine",
        main_title: "Clingo Drum Machine",
        category: "Python and ML",
        short_description: "Clingo Drum Machine",
        large_description:
            "Interactive drum machine built with Python and Clingo. It allows you to choose which sounds will represent the kick, snare, and hi-hat. Using Answer Set Programming (ASP) via Clingo, the system then analyzes and selects the best combination of sound design and rhythm pattern.",
        external_link: "https://github.com/jsvaldezv/clingo-drum-machine",
        tech_used: ["/logos/python.png", "/logos/clingo.png"],
        main_image: "/py-ml/viewBuilder.png",
        yt_link: "",
        path: "/software/web-dev/clingo-drum-machine",
        github: "https://github.com/jsvaldezv/clingo-drum-machine",
        padding: true,
    },
    {
        slug: "clingo-mixer",
        main_title: "Clingo Mixer",
        category: "Python and ML",
        short_description: "Interactive mixer",
        large_description:
            "Interactive mixer that uses Python and Clingo to generate multiple audio mixdowns based on user-defined instructions. You can specify which instruments to include, and the solver will apply automated adjustments to volume, panning, and reverb on each track.",
        external_link: "https://github.com/jsvaldezv/clingo-mixer",
        tech_used: ["/logos/python.png", "/logos/clingo.png"],
        main_image: "/py-ml/viewMixer.png",
        yt_link: "",
        path: "/software/web-dev/clingo-mixer",
        github: "https://github.com/jsvaldezv/clingo-mixer",
        padding: true,
    },
];
